using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
using System.Text.RegularExpressions;

namespace _02.Double_Palindromes
{
    class Program
    {
        static void Main(string[] args)
        {
            string[] input = new string[] {
                "  1   1      0",
                "  2   1      1",
                "  3   2      3",
                "  4   3      5",
                "  5   3      7",
                "  6   4      9",
                "  7   6      33",
                "  8   7      99",
                "  9   9      313",
                " 10  10      585",
                " 11  10      717",
                " 12  13      7447",
                " 13  14      9009",
                " 14  14      15351",
                " 15  15      32223",
                " 16  16      39993",
                " 17  16      53235",
                " 18  16      53835",
                " 19  17      73737",
                " 20  20      585585",
                " 21  21      1758571",
                " 22  21      1934391",
                " 23  21      1979791",
                " 24  22      3129213",
                " 25  23      5071705",
                " 26  23      5259525",
                " 27  23      5841485",
                " 28  24      13500531",
                " 29  30      719848917",
                " 30  30      910373019",
                " 31  30      939474939",
                " 32  31      1290880921",
                " 33  33      7451111547",
                " 34  34      10050905001",
                " 35  35      18462126481",
                " 36  35      32479297423",
                " 37  37      75015151057",
                " 38  37      110948849011",
                " 39  37      136525525631",
                " 40  41      1234104014321",
                " 41  41      1413899983141",
                " 42  41      1474922294741",
                " 43  41      1792704072971",
                " 44  41      1794096904971",
                " 45  41      1999925299991",
                " 46  43      5652622262565",
                " 47  43      7227526257227",
                " 48  43      7284717174827",
                " 49  44      9484874784849",
                " 50  45      34141388314143",
                " 51  49      552212535212255",
                " 52  50      933138363831339",
                " 53  51      1793770770773971",
                " 54  52      3148955775598413",
                " 55  54      10457587478575401",
                " 56  54      10819671917691801",
                " 57  55      18279440804497281",
                " 58  55      34104482028440143",
                " 59  56      37078796869787073",
                " 60  56      37629927072992673",
                " 61  56      55952637073625955",
                " 62  58      161206152251602161",
                " 63  59      313558153351855313",
                " 64  63      7036267126217626307",
                " 65  64      9674868723278684769",
                " 66  64      10879740244204797801",
                " 67  65      32889941788714998823",
                " 68  67      94778157422475187749",
                " 69  67      114354126121621453411",
                " 70  69      539475328171823574935",
                " 71  74      17461998948684989916471",
                " 72  76      72928088195859188082927",
                " 73  77      92913401775957710431929",
                " 74  77      94261805583838550816249",
                " 75  80      1130486074817184706840311",
                " 76  80      1194313761393931673134911",
                " 77  81      1219228158701078518229121",
                " 78  83      5812988563013103658892185",
                " 79  83      7260988688520258868890627",
                " 80  83      7475703079870789703075747",
                " 81  86      50824513851188115831542805",
                " 82  87      138758321383797383123857831",
                " 83  89      351095331428353824133590153",
                " 84  89      390714505091666190505417093",
                " 85  89      532079161251434152161970235",
                " 86  89      552963956270141072659369255",
                " 87  90      795280629691202196926082597",
                " 88  91      1609061098335005338901609061",
                " 89  94      17869806142184248124160896871",
                " 90  94      19756291244127372144219265791",
                " 91  95      30000258151173237115185200003",
                " 92  95      30658464822225352222846485603",
                " 93  96      56532345659072227095654323565",
                " 94  99      378059787464677776464787950873",
                " 95 100      1115792035060833380605302975111",
                " 96 102      3390741646331381831336461470933",
                " 97 103      7155681676104835384016761865517",
                " 98 108      188726493036450333054630394627881",
                " 99 109      332997156422555464555224651799233",
                "100 109      579782100975917393719579001287975",
                "101 111      1409460884147943003497414880649041",
                "102 111      1480869563960100770010693659680841",
                "103 113      9932525402284695775964822045252399",
                "104 114      10652099006552766666725560099025601",
                "105 114      10827628430039640604693003482672801",
                "106 116      54074940541725088788052714504947045",
                "107 116      76759778311938325452383911387795767",
                "108 117      94285848717805140304150871784858249",
                "109 117      96754720977532710701723577902745769",
                "110 117      139124355701640720027046107553421931",
                "111 120      710084230446469950059964644032480017",
                "112 120      794397832642722540045227246238793497",
                "113 120      998021119318189842248981813911120899",
                "114 120      1323475457008895965695988007545743231",
                "115 121      1681824725831390428240931385274281861",
                "116 123      5893890080115984244424895110800983985",
                "117 123      9707999142717984907094897172419997079",
                "118 123      9970387454991896491946981994547830799",
                "119 125      32190158233101105022050110133285109123",
                "120 127      122240824002234545959545432200428042221",
                "121 127      124192421350471300727003174053124291421",
                "122 127      131674457014330218696812033410754476131",
                "123 129      551700061998405245575542504899160007155",
                "124 130      773609618198307097595790703891816906377",
                "125 130      1017421766189445102992015449816671247101",
                "126 131      1634587141488515712882175158841417854361",
                "127 133      7114907950920173924554293710290597094117",
                "128 134      14327425216354951264146215945361252472341",
                "129 135      31636759764024794204540249742046795763613"
            };

            List<string> doublePalindromes = new List<string>();

            Regex regex = new Regex("\\d+\\s+\\d+\\s+(\\d+)");

            foreach(string palindrome in input)
            {
                Match match = regex.Match(palindrome);
                doublePalindromes.Add(match.Groups[1].ToString());
            }

            Console.WriteLine(string.Join(", ", doublePalindromes));
        }
    }
}
